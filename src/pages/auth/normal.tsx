import Head from 'next/head'
import Image from 'next/image'
import { Inter } from '@next/font/google'
import styles from '@/styles/Home.module.css'
import Avatar from '@mui/material/Avatar';
import Button from '@mui/material/Button';
import CssBaseline from '@mui/material/CssBaseline';
import TextField from '@mui/material/TextField';
import FormControlLabel from '@mui/material/FormControlLabel';
import Checkbox from '@mui/material/Checkbox';
import Link from '@mui/material/Link';
import Grid from '@mui/material/Grid';
import Box from '@mui/material/Box';
import Typography from '@mui/material/Typography';
import Container from '@mui/material/Container';
import { createTheme, ThemeProvider } from '@mui/material/styles';
import {useRouter} from 'next/router'
import { useAppDispatch, useAppSelector, setInfo } from "@/components/store";
import {ChangeEvent, useState, useCallback, useEffect} from "react";
const inter = Inter({ subsets: ['latin'] })

export default function Home() {
    const dispatch = useAppDispatch()
    const info: {
        id: string,
        password: string,
        nickname: string
    } = useAppSelector(state => state.userInfo)
    const [passwordConfirm, setPasswordConfirm] = useState('')
    const [passwordCheck, setPasswordCheck] = useState('')
    const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {
        event.preventDefault();
        const data = new FormData(event.currentTarget);
        console.log({
            email: data.get('email'),
            password: data.get('password'),
        });
    };
    const handlePassword = (e: any) => {
        if(5 < e.target.value.length && e.target.value.length < 21) {
            console.log(e.target.value)
            dispatch(setInfo({
                option:'password',
                value: e.target.value
            }))
        }
    }

    useEffect(()=>{
        if(passwordConfirm != '') {
            if(passwordConfirm === info.password) {
                setPasswordCheck('비밀번호가 일치합니다!')
            }
            else {
                setPasswordCheck('비밀번호가 달라요...')
            }
        }
    })
    return (
        <>
            <Head>
                <title>Create Next App</title>
                <meta name="description" content="Generated by create next app" />
                <meta name="viewport" content="width=device-width, initial-scale=1" />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            <main className={styles.main}>
                <Box
                    sx={{
                        marginTop: 8,
                        display: 'flex',
                        flexDirection: 'column',
                        alignItems: 'center'
                    }}
                >
                    <Typography component="h1" variant="h5">
                        {"회원가입"}
                    </Typography>
                    <Box component="form" noValidate onSubmit={handleSubmit} sx={{ mt: 3 }}>
                        <Grid container spacing={2}>
                            <Grid item xs={12}>
                                <TextField
                                    required
                                    fullWidth
                                    id="nickname"
                                    label="닉네임"
                                    name="nickname"
                                    autoComplete="off"
                                    onChange={(e)=>{
                                        dispatch(setInfo({
                                            option:'nickname',
                                            value: e.target.value
                                        }))
                                    }}
                                />
                            </Grid>
                            <Grid item xs={12}>
                                <TextField
                                    required
                                    fullWidth
                                    id="email"
                                    label="이메일 주소"
                                    name="email"
                                    autoComplete="off"
                                    onChange={(e)=>{
                                        dispatch(setInfo({
                                            option:'id',
                                            value: e.target.value
                                        }))
                                    }}
                                />
                            </Grid>
                            <Grid item xs={12}>
                                <TextField
                                    required
                                    fullWidth
                                    name="password"
                                    label="비밀번호"
                                    type="password"
                                    id="password"
                                    autoComplete="new-password"
                                    helperText="6자에서 20자 사이의 비밀번호를 입력하세요"
                                    inputProps={{ maxLength: 20 }}
                                    onChange={handlePassword}
                                />
                            </Grid>
                            <Grid item xs={12}>
                                <TextField
                                    required
                                    fullWidth
                                    name="password"
                                    label="비밀번호 확인"
                                    type="password"
                                    id="password"
                                    autoComplete="off"
                                    helperText={passwordCheck}
                                    onChange={(e) => setPasswordConfirm(e.target.value)}
                                />
                            </Grid>
                        </Grid>
                        <Button
                            type="submit"
                            fullWidth
                            variant="contained"
                            sx={{ mt: 3, mb: 2 }}
                        >
                            {"시작하기"}
                        </Button>
                        <Grid container justifyContent="flex-end">
                            <Grid item>
                                <Link style={{
                                    color: 'black'
                                }} href="/" variant="body2">
                                    {"이미 계정이 있나요? 로그인하세요"}
                                </Link>
                            </Grid>
                        </Grid>
                    </Box>
                </Box>
            </main>
        </>
    )
}
